unit CadastroProdutoVenda;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, Vcl.Mask, Vcl.DBCtrls;

type
  TTelaCadastroProdutoVenda = class(TForm)
    Label3: TLabel;
    idproduto: TDBEdit;
    Label4: TLabel;
    nmproduto: TDBEdit;
    Label5: TLabel;
    vlunitario: TDBEdit;
    Label6: TLabel;
    quantidade: TDBEdit;
    Button1: TButton;
    Label1: TLabel;
    vlitem: TDBEdit;
    Button2: TButton;
    Button3: TButton;
    QtDisponivel: TDBEdit;
    Edit1: TEdit;
    procedure Button1Click(Sender: TObject);
    procedure Button2Click(Sender: TObject);
    procedure FormShow(Sender: TObject);
    procedure Button3Click(Sender: TObject);
    procedure vlunitarioExit(Sender: TObject);
    procedure quantidadeExit(Sender: TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure Button1Exit(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  TelaCadastroProdutoVenda: TTelaCadastroProdutoVenda;

implementation

{$R *.dfm}

uses DBvendas, TelaConsultaProdutoVenda;

procedure TTelaCadastroProdutoVenda.Button1Click(Sender: TObject);
begin
    TelaConsultaProduto.showmodal;
end;

procedure TTelaCadastroProdutoVenda.Button1Exit(Sender: TObject);
begin
        //Trazer quantidade disponivel
   begin
                with DbVendas1.Qestoque do
    begin
      close;
      sql.Clear;
      sql.Add('Select * From temp.movimentoestoque where  idmovimento= (SELECT max(idmovimento) FROM temp.movimentoestoque Where idproduto ='+ idproduto.text +')');
      open;
    end;
   end;

end;

procedure TTelaCadastroProdutoVenda.Button2Click(Sender: TObject);
var
Qdisponivel : Integer;

begin
      DbVendas1.QestoqueTemp.close;
      DbVendas1.QestoqueTemp.sql.clear;
      DbVendas1.QestoqueTemp.sql.add('Insert Into temp.movimentoestoque (idproduto, qtmovimentada, qtdisponivel, dtmovimento, tpmovimento, dtcadastro)');
      DbVendas1.QestoqueTemp.sql.add('Values (:Pidproduto ,:Pqtmovimentada, :Pqtdisponivel, :Pdtmovimento , :Ptpmovimento , :Pdtcadastro )');
      DbVendas1.QestoqueTemp.ParamByName('Pidproduto').AsInteger :=  StrToInt(idproduto.Text);
      DbVendas1.QestoqueTemp.ParamByName('Pqtmovimentada').AsInteger := StrToInt (quantidade.Text);
      DbVendas1.QestoqueTemp.ParamByName('Pqtdisponivel').AsInteger :=  StrToInt(Edit1.Text);
      DbVendas1.QestoqueTemp.ParamByName('Pdtmovimento').Asdate :=  now;
      DbVendas1.QestoqueTemp.ParamByName('Ptpmovimento').AsString :=  'Saida';
      DbVendas1.QestoqueTemp.ParamByName('Pdtcadastro').Asdate := now ;
      DbVendas1.QestoqueTemp.ExecSql ;
    DbVendas1.MTempItem.Insert;
    DbVendas1.MTempItem.Close;
    DbVendas1.MTempItem.Open;
end;


procedure TTelaCadastroProdutoVenda.Button3Click(Sender: TObject);
begin
    DbVendas1.MTempItem.Cancel;
    TelaCadastroProdutoVenda.close;
end;

procedure TTelaCadastroProdutoVenda.FormClose(Sender: TObject;
  var Action: TCloseAction);
begin
       DbVendas1.MTempItem.Cancel;
    TelaCadastroProdutoVenda.close;
end;

procedure TTelaCadastroProdutoVenda.FormShow(Sender: TObject);
begin
    DbVendas1.MTempItem.Append;
end;


procedure TTelaCadastroProdutoVenda.quantidadeExit(Sender: TObject);
var qtitem, vlunit, vltotal : real;
qtdisponivelatual : integer;
begin
   qtitem := StrToInt (quantidade.Text);
   vlunit := StrToFloat (vlunitario.Text);
   vltotal := qtitem * vlunit;
   vlitem.text := formatfloat('###.00',vltotal);

                   //Cadastrar a movimentação no estoque

   DbVendas1.Qestoque.open;
    if (QtDisponivel.text) = '' then
    begin
    ShowMessage('Produto sem quantidade em estoque');
    end;


    if StrToInt (QtDisponivel.text) >= StrToInt (quantidade.Text) then
      qtdisponivelatual :=  StrToInt (QtDisponivel.Text) - StrToInt (quantidade.Text) ;
      Edit1.Text := IntToStr (qtdisponivelatual);

    if StrToInt (QtDisponivel.text) <= StrToInt(quantidade.Text) then
    begin
    ShowMessage('Produto sem quantidade em estoque');
    end;
end;

procedure TTelaCadastroProdutoVenda.vlunitarioExit(Sender: TObject);
var qtitem, vlunit, vltotal : real;
begin
   if quantidade.Text <> '' then
   begin
   qtitem := StrToInt (quantidade.Text);
   vlunit := StrToFloat (vlunitario.Text);
   vltotal := qtitem * vlunit;
   vlitem.text := formatfloat('###.00',vltotal);
   end;
end;


end.
