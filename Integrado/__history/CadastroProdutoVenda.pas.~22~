unit CadastroProdutoVenda;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, Vcl.Mask, Vcl.DBCtrls,
  Data.DB, Vcl.Grids, Vcl.DBGrids;

type
  TTelaCadastroProdutoVenda = class(TForm)
    Label3: TLabel;
    idproduto: TDBEdit;
    Label4: TLabel;
    nmproduto: TDBEdit;
    Label5: TLabel;
    vlunitario: TDBEdit;
    Label6: TLabel;
    quantidade: TDBEdit;
    Button1: TButton;
    Label1: TLabel;
    vlitem: TDBEdit;
    Button2: TButton;
    Button3: TButton;
    QtDisponivel: TDBEdit;
    Edit1: TEdit;
    DBGrid1: TDBGrid;
    procedure Button1Click(Sender: TObject);
    procedure Button2Click(Sender: TObject);
    procedure Button3Click(Sender: TObject);
    procedure vlunitarioExit(Sender: TObject);
    procedure quantidadeExit(Sender: TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure Button1Exit(Sender: TObject);
  private
    procedure ExclusãoMovimentaçãoTemp;
    { Private declarations }
  public
    { Public declarations }
  end;

var
  TelaCadastroProdutoVenda: TTelaCadastroProdutoVenda;

implementation

{$R *.dfm}

uses DBvendas, TelaConsultaProdutoVenda;

procedure TTelaCadastroProdutoVenda.Button1Click(Sender: TObject);
begin
    TelaConsultaProduto.showmodal;
end;

procedure TTelaCadastroProdutoVenda.Button1Exit(Sender: TObject);
begin
    if QtDisponivel.text = '' then
    begin
        // realizar a inclusão da tabela movimentoestoque para a temp
    DbVendas1.QestoqueTemp.close;
    DbVendas1.QestoqueTemp.sql.clear;
    DbVendas1.QestoqueTemp.sql.add('Insert Into temp.movimentoestoque Select * From movimentoestoque where  idmovimento=(SELECT max(idmovimento ) FROM movimentoestoque Where idproduto =  :Pidproduto)');
    DbVendas1.QestoqueTemp.ParamByName('Pidproduto').AsInteger := StrToInt (idproduto.text) ;
    DbVendas1.QestoqueTemp.execsql;
    end;
        //Trazer quantidade disponivel
   begin
      DbVendas1.Qestoque.close;
      DbVendas1.Qestoque.sql.Clear;
      DbVendas1.Qestoque.sql.add('Select * From temp.movimentoestoque Where idproduto = :Pidproduto');
      DbVendas1.Qestoque.ParamByName('Pidproduto').AsInteger := StrToInt (idproduto.text) ;
      DbVendas1.Qestoque.open;
   end;

end;

procedure TTelaCadastroProdutoVenda.ExclusãoMovimentaçãoTemp;
begin

end;

procedure TTelaCadastroProdutoVenda.Button2Click(Sender: TObject);
var
Qdisponivel : Integer;

begin
      // movimentação na tabela temp
      DbVendas1.QestoqueTemp.close;
      DbVendas1.QestoqueTemp.sql.clear;
      DbVendas1.QestoqueTemp.sql.add('Update temp.movimentoestoque Set qtmovimentada = :Pqtmovimentada, qtdisponivel = :Pqtdisponivel, dtmovimento = :Pdtmovimento, tpmovimento = :Ptpmovimento, dtcadastro = :Pdtcadastro Where idproduto = :Pidproduto');
      DbVendas1.QestoqueTemp.ParamByName('Pidproduto').AsInteger :=  StrToInt(idproduto.Text);
      DbVendas1.QestoqueTemp.ParamByName('Pqtmovimentada').AsInteger := StrToInt (quantidade.Text);
      DbVendas1.QestoqueTemp.ParamByName('Pqtdisponivel').AsInteger :=  StrToInt(Edit1.Text);
      DbVendas1.QestoqueTemp.ParamByName('Pdtmovimento').Asdate :=  now;
      DbVendas1.QestoqueTemp.ParamByName('Ptpmovimento').AsString :=  'Saida';
      DbVendas1.QestoqueTemp.ParamByName('Pdtcadastro').Asdate := now ;
      DbVendas1.QestoqueTemp.ExecSql ;

    DbVendas1.MTempItem.Insert;
    DbVendas1.MTempItem.Close;
    DbVendas1.MTempItem.Open;

end;


procedure TTelaCadastroProdutoVenda.Button3Click(Sender: TObject);
begin
    DbVendas1.MTempItem.Cancel;
    TelaCadastroProdutoVenda.close;
    ExclusãoMovimentaçãoTemp;
end;

procedure TTelaCadastroProdutoVenda.FormClose(Sender: TObject;
  var Action: TCloseAction);
begin

   DbVendas1.MTempItem.Cancel;
   ExclusãoMovimentaçãoTemp;


end;

procedure TTelaCadastroProdutoVenda.quantidadeExit(Sender: TObject);
var qtitem, vlunit, vltotal : real;
qtdisponivelatual : integer;
begin
   qtitem := StrToInt (quantidade.Text);
   vlunit := StrToFloat (vlunitario.Text);
   vltotal := qtitem * vlunit;
   vlitem.text := formatfloat('###.00',vltotal);

                   //Cadastrar a movimentação no estoque

   DbVendas1.Qestoque.open;

   if (Trim(QtDisponivel.text).IsEmpty) then
    begin
     QtDisponivel.Text := '0';
    end;

     if StrToInt (QtDisponivel.text) >= StrToInt (quantidade.Text) then
    begin
      qtdisponivelatual :=  StrToInt (QtDisponivel.Text) - StrToInt (quantidade.Text) ;
      Edit1.Text := IntToStr (qtdisponivelatual);
    end;

    if StrToInt (QtDisponivel.text) < StrToInt(quantidade.Text) then
    begin
    ShowMessage('Produto sem quantidade em estoque');
    end;
end;

procedure TTelaCadastroProdutoVenda.vlunitarioExit(Sender: TObject);
var qtitem, vlunit, vltotal : real;
begin
   if quantidade.Text <> '' then
   begin
   qtitem := StrToInt (quantidade.Text);
   vlunit := StrToFloat (vlunitario.Text);
   vltotal := qtitem * vlunit;
   vlitem.text := formatfloat('###.00',vltotal);
   end;
end;


end.
